{"version":3,"file":"material-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/disable-ripple.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/style/apply-transform.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/datetime/date-formats.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/line/line.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/option.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/testing/month-constants.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  disabled: boolean;\n}\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values.  */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T,\n    defaultColor?: ThemePalette): Constructor<CanColor> & T {\n  return class extends base {\n    private _color: ThemePalette;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  disableRipple: boolean;\n}\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\n    : Constructor<CanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n/** @docs-private */\nexport interface HasTabIndex {\n  tabIndex: number;\n}\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : Constructor<HasTabIndex> & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs/Subject';\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState();\n  stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: Constructor<CanUpdateErrorState> & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField needs to run change detection.\n     */\n    stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   */\n  useUtcForDisplay: boolean;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    // TODO(mmalerba): replace with !platform.TRIDENT, logic currently duplicated to avoid breaking\n    // change from injecting the Platform.\n    this.useUtcForDisplay = !(typeof document === 'object' && !!document &&\n        /(msie|trident)/i.test(navigator.userAgent));\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {month: style});\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {weekday: style});\n      return range(7, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      let dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric'});\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    if (SUPPORTS_INTL_API) {\n      if (this.useUtcForDisplay) {\n        date = new Date(Date.UTC(\n            date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n            date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        displayFormat = {...displayFormat, timeZone: 'utc'};\n      }\n      let dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    let result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, supportsPassiveEventListeners} from '@angular/cdk/platform';\nimport {RippleRef, RippleState} from './ripple-ref';\n\n\n/** Fade-in duration for the ripples. Can be modified with the speedFactor option. */\nexport const RIPPLE_FADE_IN_DURATION = 450;\n\n/** Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor. */\nexport const RIPPLE_FADE_OUT_DURATION = 400;\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst IGNORE_MOUSE_EVENTS_TIMEOUT = 800;\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  speedFactor?: number;\n  persistent?: boolean;\n};\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer {\n\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Events to be registered on the trigger element. */\n  private _triggerEvents = new Map<string, any>();\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /** Options that apply to all the event listeners that are bound by the renderer. */\n  private _eventOptions = supportsPassiveEventListeners() ? ({passive: true} as any) : false;\n\n  /** Ripple config for all ripples created by events. */\n  rippleConfig: RippleConfig = {};\n\n  /** Whether mouse ripples should be created or not. */\n  rippleDisabled: boolean = false;\n\n  constructor(elementRef: ElementRef, private _ngZone: NgZone, platform: Platform) {\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown);\n      this._triggerEvents.set('mouseup', this.onPointerUp);\n      this._triggerEvents.set('mouseleave', this.onPointerUp);\n\n      this._triggerEvents.set('touchstart', this.onTouchStart);\n      this._triggerEvents.set('touchend', this.onPointerUp);\n\n      // By default use the host element as trigger element.\n      this.setTriggerElement(this._containerElement);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerElement.getBoundingClientRect();\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const duration = RIPPLE_FADE_IN_DURATION / (config.speedFactor || 1);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isPointerDown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, RIPPLE_FADE_OUT_DURATION);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets the trigger element and registers the mouse events. */\n  setTriggerElement(element: HTMLElement | null) {\n    // Remove all previously register event listeners from the trigger element.\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        this._triggerElement!.removeEventListener(type, fn, this._eventOptions);\n      });\n    }\n\n    if (element) {\n      // If the element is not null, register all event listeners on the trigger element.\n      this._ngZone.runOutsideAngular(() => {\n        this._triggerEvents.forEach((fn, type) =>\n            element.addEventListener(type, fn, this._eventOptions));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private onMousedown = (event: MouseEvent) => {\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + IGNORE_MOUSE_EVENTS_TIMEOUT;\n\n    if (!this.rippleDisabled && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private onTouchStart = (event: TouchEvent) => {\n    if (!this.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      this.fadeInRipple(event.touches[0].clientX, event.touches[0].clientY, this.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private onPointerUp = () => {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\n// TODO(devversion): Move into global utility function.\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param element\n * @param transformValue\n */\nexport function applyCssTransform(element: HTMLElement, transformValue: string) {\n  // It's important to trim the result, because the browser will ignore the set operation\n  // if the string contains only whitespace.\n  let value = transformValue.trim();\n\n  element.style.transform = value;\n  element.style.webkitTransform = value;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks');\n\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Whether we've already checked for HammerJs availability. */\n  private _hasCheckedHammer = false;\n\n  /** Reference to the global `document` object. */\n  private _document = typeof document === 'object' && document ? document : null;\n\n  /** Reference to the global 'window' object. */\n  private _window = typeof window === 'object' && window ? window : null;\n\n  constructor(@Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n  /** Whether any sanity checks are enabled */\n  private _areChecksEnabled(): boolean {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    return this._window && (this._window['__karma__'] || this._window['jasmine']);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    if (this._document && !this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    if (this._document && typeof getComputedStyle === 'function') {\n      const testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      const computedStyle = getComputedStyle(testElement);\n\n      // In some situations, the computed style of the test element can be null. For example in\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n      if (computedStyle && computedStyle.display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\n\n  /** Checks whether HammerJS is available. */\n  _checkHammerIsAvailable(): void {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n\n    if (this._areChecksEnabled() && !this._window['Hammer']) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE');\n\n/** Provider for MAT_DATE_LOCALE injection token. */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges= new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE_PROVIDER} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n    MAT_DATE_LOCALE_PROVIDER\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable()\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {\n  HammerStatic,\n  HammerInstance,\n  Recognizer,\n  RecognizerStatic,\n  HammerOptions,\n} from './gesture-annotations';\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\n\n/* Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  private _hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n  /* List of new event names to add to the gesture support list */\n  events: string[] = this._hammer ? [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ] : [];\n\n  constructor(\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\n    @Optional() commonModule?: MatCommonModule) {\n    super();\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new this._hammer(element, this._hammerOptions || undefined);\n\n    // Default Hammer Recognizers.\n    const pan = new this._hammer.Pan();\n    const swipe = new this._hammer.Swipe();\n    const press = new this._hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc as HammerInstance;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class MatLineSetter {\n  constructor(private _lines: QueryList<MatLine>, private _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n\n  private _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n\n  private _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n\n  private _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._element.nativeElement.classList.add(className);\n    } else {\n      this._element.nativeElement.classList.remove(className);\n    }\n  }\n\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\n\n/** Possible states for a ripple element. */\nexport enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple reference. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: RippleRenderer,\n    public element: HTMLElement,\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  InjectionToken,\n  Optional,\n} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {RippleRef} from './ripple-ref';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * If set, the default duration of the fade-in animation is divided by this value. For example,\n   * setting it to 0.5 will cause the ripple fade-in animation to take twice as long.\n   * A changed speedFactor will not affect the fade-out duration of the ripples.\n   */\n  baseSpeedFactor?: number;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n  @Input('matRippleTrigger') trigger: HTMLElement|HTMLElement;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled') disabled: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * If set, the normal duration of ripple animations is divided by this value. For example,\n   * setting it to 0.5 will cause the animations to take twice as long.\n   * A changed speedFactor will not modify the fade-out duration of the ripples.\n   */\n  @Input('matRippleSpeedFactor') speedFactor: number = 1;\n\n  /** Custom color for ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether foreground ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  constructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, platform);\n    this._globalOptions = globalOptions ? globalOptions : {};\n\n    this._updateRippleRenderer();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['trigger'] && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._updateRippleRenderer();\n  }\n\n  ngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n\n  /** Launches a manual ripple at the specified position. */\n  launch(x: number, y: number, config: RippleConfig = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(x, y, config);\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /** Ripple configuration from the directive's input values. */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\n\n  /** Updates the ripple renderer with the latest ripple configuration. */\n  _updateRippleRenderer() {\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport {MatRipple, RippleGlobalOptions, MAT_RIPPLE_GLOBAL_OPTIONS} from './ripple';\nexport {RippleRef, RippleState} from './ripple-ref';\nexport {RippleConfig, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION} from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\n\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <mat-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nexport class MatOptgroupBase { }\nexport const _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n} from '@angular/core';\nimport {MatOptgroup} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _id = `mat-option-${_uniqueIdCounter++}`;\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** The unique ID of the option. */\n  get id(): string { return this._id; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  @Output() onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  constructor(\n    private _element: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\n    @Optional() readonly group: MatOptgroup) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n  /**\n   * Counts the amount of option group labels that precede the specified option.\n   * @param optionIndex Index of the option at which to start counting.\n   * @param options Flat list of all of the options.\n   * @param optionGroups Flat list of all of the option groups.\n   */\n  static countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n    optionGroups: QueryList<MatOptgroup>): number {\n\n    if (optionGroups.length) {\n      let optionsArray = options.toArray();\n      let groups = optionGroups.toArray();\n      let groupCounter = 0;\n\n      for (let i = 0; i < optionIndex + 1; i++) {\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n    OCT = 9, NOV = 10, DEC = 11;\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","mixinDisabled","base","_super","class_1","args","_i","arguments","length","_this","apply","_disabled","tslib_1.__extends","defineProperty","value","coerceBooleanProperty","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","stateChanges","Subject","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","range","valueFunction","valuesArray","Array","i","enforceStyleRecalculation","element","window","getComputedStyle","getPropertyValue","distanceToFurthestCorner","x","y","rect","distX","Math","max","abs","left","right","distY","top","bottom","sqrt","applyCssTransform","transformValue","trim","style","transform","webkitTransform","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","n","call","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","InjectionToken","MatCommonModule","_sanityChecksEnabled","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","isDevMode","_isTestEnv","doctype","console","warn","testElement","createElement","body","appendChild","computedStyle","display","removeChild","_checkHammerIsAvailable","type","NgModule","imports","BidiModule","exports","providers","provide","useValue","undefined","decorators","Optional","Inject","MAT_DATE_LOCALE","MAT_DATE_LOCALE_PROVIDER","useExisting","LOCALE_ID","DateAdapter","_localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","long","short","narrow","ɵ0","String","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","NativeDateAdapter","matDateLocale","useUtcForDisplay","test","navigator","userAgent","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf_1","DateTimeFormat","month","_stripDirectionalityCharacters","format","Date","getDateNames","dtf_2","day","getDayOfWeekNames","dtf_3","weekday","getYearName","dtf","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","createDate","Error","result","today","parse","displayFormat","UTC","getHours","getMinutes","getSeconds","getMilliseconds","tslib_1.__assign","timeZone","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","obj","isNaN","getTime","NaN","setFullYear","slice","str","replace","Injectable","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","MatNativeDateModule","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MAT_HAMMER_OPTIONS","GestureConfig","_hammerOptions","commonModule","_hammer","Hammer","events","buildHammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","options","inheritances","recognizer","push","forEach","item","HammerGestureConfig","Directive","selector","host","class","MatLine","MatLineSetter","_lines","_element","_setLineClass","changes","subscribe","count","_resetClasses","_setClass","className","isAdd","declarations","MatLineModule","RippleRef","_renderer","config","state","RippleState","HIDDEN","fadeOut","fadeOutRipple","IGNORE_MOUSE_EVENTS_TIMEOUT","RippleRenderer","elementRef","_ngZone","platform","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","_eventOptions","supportsPassiveEventListeners","passive","rippleConfig","rippleDisabled","onMousedown","isSyntheticEvent","_lastTouchStartEvent","now","fadeInRipple","clientX","clientY","onTouchStart","touches","onPointerUp","ripple","persistent","VISIBLE","isBrowser","_containerElement","set","setTriggerElement","containerRect","getBoundingClientRect","centered","width","height","radius","duration","speedFactor","offsetX","offsetY","backgroundColor","transitionDuration","rippleRef","FADING_IN","runTimeoutOutsideZone","delete","rippleEl","RIPPLE_FADE_OUT_DURATION","opacity","FADING_OUT","fadeOutAll","_triggerElement","fn","removeEventListener","runOutsideAngular","addEventListener","delay","setTimeout","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_rippleRenderer","_globalOptions","_updateRippleRenderer","ngOnChanges","trigger","ngOnDestroy","launch","baseSpeedFactor","exportAs","[class.mat-ripple-unbounded]","ElementRef","NgZone","Platform","Input","unbounded","MatRippleModule","PlatformModule","Component","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","styles","template","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","MatPseudoCheckbox","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_labelId","MatOptgroup","inputs","role","[class.mat-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_changeDetectorRef","_parent","group","_selected","_active","_id","onSelectionChange","EventEmitter","multiple","disableRipple","_getHostElement","textContent","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","viewValue","_handleKeydown","keyCode","ENTER","SPACE","_selectViaInteraction","preventDefault","_getTabIndex","emit","countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[class.mat-option-disabled]","(click)","(keydown)","propDecorators","Output","MatOptionModule","CommonModule","MAT_LABEL_GLOBAL_OPTIONS"],"mappings":"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"}